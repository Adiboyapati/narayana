{
	"name": "duplicaterows",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_invlocaor",
						"type": "DatasetReference"
					},
					"name": "Invlocator"
				},
				{
					"dataset": {
						"referenceName": "ds_innlocaornew",
						"type": "DatasetReference"
					},
					"name": "invlocaornew"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_combinelocaor",
						"type": "DatasetReference"
					},
					"name": "invlocatondata"
				}
			],
			"transformations": [
				{
					"name": "combination"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "sort1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ORGANIZATION_ID as string,",
				"          Location1 as string,",
				"          Location2 as string,",
				"          Location3 as string,",
				"          Location4 as string,",
				"          {Location Type} as string,",
				"          PICKING_ORDER as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Invlocator",
				"source(output(",
				"          ORGANIZATION_ID as string,",
				"          Location1 as string,",
				"          Location2 as string,",
				"          Location3 as string,",
				"          Location4 as string,",
				"          {Location Type} as string,",
				"          PICKING_ORDER as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> invlocaornew",
				"Invlocator, invlocaornew union(byName: true)~> combination",
				"combination aggregate(groupBy(PICKING_ORDER),",
				"     each(match(name !='PICKING_ORDER'), $$ = first($$))) ~> aggregate1",
				"aggregate1 sort(asc(PICKING_ORDER, true)) ~> sort1",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {1001} as string,",
				"          {adi        } as string,",
				"          AP as string,",
				"          {9742989539} as string",
				"     ),",
				"     partitionFileNames:['inv_locaor.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> invlocatondata"
			]
		}
	}
}