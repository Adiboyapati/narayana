{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "azureadffactorydev"
		},
		"AzureBlobStorage_adfdevelopment_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage_adfdevelopment'"
		},
		"AzureBlob_adf_dev_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlob_adf_dev'"
		},
		"AzureBlob_adf_development_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlob_adf_development'"
		},
		"AzureDataLakeStorage_adfdevelopment_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage_adfdevelopment'"
		},
		"AzureDataLake_adf_dev_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLake_adf_dev'"
		},
		"AzureDataLake_adf_development_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLake_adf_development'"
		},
		"AzureDataLakeStorage_adfdevelopment_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azuredatalakestoragee.dfs.core.windows.net/"
		},
		"AzureDataLake_adf_dev_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azureadlsdev.dfs.core.windows.net/"
		},
		"AzureDataLake_adf_development_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azuredatalakestoragedev.dfs.core.windows.net/"
		},
		"stogage_blobtoadls_triggers_properties_setvariable_Swich_copydata1_parameters_Filename": {
			"type": "string",
			"defaultValue": "Full_Down_Displacement_Information.sql"
		},
		"stogage_blobtoadls_triggers_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/9815a461-9524-4787-a4d6-80df6d54b073/resourceGroups/azuredevelopment-rs/providers/Microsoft.Storage/storageAccounts/azureblobstoragedev1"
		},
		"storage_triggers_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/9815a461-9524-4787-a4d6-80df6d54b073/resourceGroups/azuredevelopment-rs/providers/Microsoft.Storage/storageAccounts/azureblobstoragedev1"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_onetimecopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_vl0",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "rawblob//"
							},
							{
								"name": "Destination",
								"value": "struckzone//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ""
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorage_adfdevelopment",
										"type": "LinkedServiceReference"
									},
									"path": "logzone"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_vl0",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_vl0",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ISE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_vl0')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_vl0')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_adfdevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Empdata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "empdatafile",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "empdatafile",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"empdatavaliddation": {},
									"employeeoutput": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ISE"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-12T11:05:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/empdatafile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Getmetadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "locatorcopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "getmetadata_filter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "locator_blob_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dalalake_locator_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "getmetadata_filter",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata_blob').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(activity('Get Metadata_blob').output.childItems[0].name,item().name)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Metadata_blob",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "azure_blob_metafata_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "EMR"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/locator_blob_ds')]",
				"[concat(variables('factoryId'), '/datasets/dalalake_locator_ds')]",
				"[concat(variables('factoryId'), '/datasets/azure_blob_metafata_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copydata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this is data copy from azureblodstoraage to azuredatalake storage",
				"activities": [
					{
						"name": "copy azureblob to ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "azureblobprepare1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "azureprepare_adls1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "delete copydata",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "copy azureblob to ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "azureblobprepare1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlob_adf_development",
									"type": "LinkedServiceReference"
								},
								"path": "logzone"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ISE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azureblobprepare1')]",
				"[concat(variables('factoryId'), '/datasets/azureprepare_adls1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copydata1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this is data copy from azureblodstoraage to azuredatalake storage",
				"activities": [
					{
						"name": "copy azureblob to ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "azureblobprepare2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "azureprepare_adls2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "delete copydata",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "copy azureblob to ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "azureblobprepare2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlob_adf_development",
									"type": "LinkedServiceReference"
								},
								"path": "logzone"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ISE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azureblobprepare2')]",
				"[concat(variables('factoryId'), '/datasets/azureprepare_adls2')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copydata2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this is data copy from azureblodstoraage to azuredatalake storage",
				"activities": [
					{
						"name": "copy azureblob to ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "azureblobprepare3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "azureprepare_adls3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "delete copydata",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "copy azureblob to ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "azureblobprepare3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlob_adf_development",
									"type": "LinkedServiceReference"
								},
								"path": "logzone"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ISE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azureblobprepare3')]",
				"[concat(variables('factoryId'), '/datasets/azureprepare_adls3')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copydata3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this is data copy from azureblodstoraage to azuredatalake storage",
				"activities": [
					{
						"name": "copy azureblob to ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "azureblobprepare4",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "azureprepare_adls4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "delete copydata",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "copy azureblob to ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "azureblobprepare4",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlob_adf_dev",
									"type": "LinkedServiceReference"
								},
								"path": "logzone"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ISE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azureblobprepare4')]",
				"[concat(variables('factoryId'), '/datasets/azureprepare_adls4')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copydata4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this is data copy from azureblodstoraage to azuredatalake storage",
				"activities": [
					{
						"name": "copy azureblob to ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "azureblobprepare5",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "azureprepare_adls5",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "delete copydata",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "copy azureblob to ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "azureblobprepare5",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlob_adf_dev",
									"type": "LinkedServiceReference"
								},
								"path": "logzone"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ISE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azureblobprepare5')]",
				"[concat(variables('factoryId'), '/datasets/azureprepare_adls5')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customercopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "customercopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Filter_condition_metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "customer_blob_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "customer_adls_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "deletelocator",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "customercopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "delete_customer_blob_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlob_adf_dev",
									"type": "LinkedServiceReference"
								},
								"path": "logzone"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Filter_condition_metadata",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata_bloto Adls",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata_bloto Adls').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(activity('Get Metadata_bloto Adls').output.childItems[0].name,item().name)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Metadata_bloto Adls",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "metadata_blob_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "EMR"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/customer_blob_ds')]",
				"[concat(variables('factoryId'), '/datasets/customer_adls_ds')]",
				"[concat(variables('factoryId'), '/datasets/delete_customer_blob_ds')]",
				"[concat(variables('factoryId'), '/datasets/metadata_blob_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customercopy_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable_TokenID",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenID",
							"value": {
								"value": "@split(pipeline().parameters.folderName,'_')[1]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable_Value",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Value",
							"value": {
								"value": "@split(pipeline().parameters.folderName,'_')[2]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable_runID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable_TokenID",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable_Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunID",
							"value": {
								"value": "@concat(variables('TokenID'),'_',variables('Value'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Switch_RunTokenID",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Set variable_runID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@variables('TokenID')",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Load",
									"activities": [
										{
											"name": "Copy data1",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "BinarySource",
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true
													},
													"formatSettings": {
														"type": "BinaryReadSettings"
													}
												},
												"sink": {
													"type": "BinarySink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "Azureblobstorage",
													"type": "DatasetReference",
													"parameters": {}
												}
											],
											"outputs": [
												{
													"referenceName": "dalalake_locator_ds",
													"type": "DatasetReference",
													"parameters": {}
												}
											]
										}
									]
								},
								{
									"value": "Down",
									"activities": [
										{
											"name": "Copy data2",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "BinarySource",
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true
													},
													"formatSettings": {
														"type": "BinaryReadSettings"
													}
												},
												"sink": {
													"type": "BinarySink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "Azureblobstorage",
													"type": "DatasetReference",
													"parameters": {}
												}
											],
											"outputs": [
												{
													"referenceName": "azureprepare_adls",
													"type": "DatasetReference",
													"parameters": {}
												}
											]
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderName": {
						"type": "string",
						"defaultValue": "output1"
					}
				},
				"variables": {
					"TokenID": {
						"type": "String"
					},
					"Value": {
						"type": "String"
					},
					"RunID": {
						"type": "String"
					},
					"TokenPath": {
						"type": "String"
					}
				},
				"folder": {
					"name": "EMR"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Azureblobstorage')]",
				"[concat(variables('factoryId'), '/datasets/dalalake_locator_ds')]",
				"[concat(variables('factoryId'), '/datasets/azureprepare_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/emailnotification')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "send email notification",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-27.southindia.logic.azure.com:443/workflows/ce245314226f4e22bc1d6cdad4f58e3f/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=ld3B73-FkAXYYtgochSfMi4z3BMXhryRimQDkvwTZ1E",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-type": {
									"value": "application/json",
									"type": "Expression"
								}
							},
							"body": {
								"value": "{\n  \"message\":   \"this is custom dynamic message from your pipeline with run TO @{pipeline().RunId}.\",\n  \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n  \"pipelineName\":    \"@{pipeline().Pipeline}\",\n  \"receiver\"  :      \"@{pipeline().parameters.receiver}\"\n \n}",
								"type": "Expression"
							},
							"linkedServices": [
								{
									"referenceName": "AzureDataLake_adf_development",
									"type": "LinkedServiceReference"
								}
							],
							"httpRequestTimeout": "00:01:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"dataFactoryName": {
						"type": "string"
					},
					"pipelineName": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"receiver": {
						"type": "string"
					},
					"Sourcefile": {
						"type": "string"
					},
					"Status": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ISE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/foreachblobtoAdls')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this is data copy from azureblodstoraage to azuredatalake storage by using forloop",
				"activities": [
					{
						"name": "Get Metadata_forloop",
						"description": "this getmetadata activity copy from blob to ADLS",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Binary_blob_forloop2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "IterativeEachfileforloop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata_forloop",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata_forloop').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data_forloop",
									"description": "this data eachIteration forloop",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": "*.sql",
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Binary_blob_foreach_ds2",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Binary_Adls_forloop_ds2",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ISE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary_blob_forloop2')]",
				"[concat(variables('factoryId'), '/datasets/Binary_blob_foreach_ds2')]",
				"[concat(variables('factoryId'), '/datasets/Binary_Adls_forloop_ds2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ifconditionblobtoAdls')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this is data copy from azureblodstoraage to azuredatalake storage by using forloop",
				"activities": [
					{
						"name": "Get Metadata_ifcondition",
						"description": "this getmetadata activity copy from blob to ADLS",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Binary_blob_forloop3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "If Condition_copydata",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata_ifcondition",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get Metadata_ifcondition').output.exists",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Delete if condition",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Binary_blob_foreach_ds3",
											"type": "DatasetReference",
											"parameters": {}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlob_adf_development",
												"type": "LinkedServiceReference"
											},
											"path": "transiant"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data ifcondition",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"deleteFilesAfterCompletion": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Binary_blob_foreach_ds3",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Binary_Adls_forloop_ds3",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ISE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary_blob_forloop3')]",
				"[concat(variables('factoryId'), '/datasets/Binary_blob_foreach_ds3')]",
				"[concat(variables('factoryId'), '/datasets/Binary_Adls_forloop_ds3')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/inv_locator')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "duplicaterows",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "duplicaterows",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Invlocator": {},
									"invlocaornew": {},
									"invlocatondata": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ISE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/duplicaterows')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/locatordata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "locatorcopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Filter_condition",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "locator_blob_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dalalake_locator_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "deletelocator",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "locatorcopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "deletelocator_blob_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlob_adf_dev",
									"type": "LinkedServiceReference"
								},
								"path": "logzone"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Customer_copy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "deletelocator",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "customercopy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "blob to adls",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "metadata_blob_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter_condition",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "blob to adls",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('blob to adls').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(activity('blob to adls').output.childItems[0].name,item().name)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "EMR"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/locator_blob_ds')]",
				"[concat(variables('factoryId'), '/datasets/dalalake_locator_ds')]",
				"[concat(variables('factoryId'), '/datasets/deletelocator_blob_ds')]",
				"[concat(variables('factoryId'), '/pipelines/customercopy')]",
				"[concat(variables('factoryId'), '/datasets/metadata_blob_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/runningtotal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PoRunningTotal": {},
									"ouputsink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ISE"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-12T11:05:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/setvariable_Swich')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this is data copy from azureblodstoraage to azuredatalake storage",
				"activities": [
					{
						"name": "Set variable_tokenID",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenID",
							"value": {
								"value": "@split(pipeline().parameters.Filename,'_')[1]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable_value",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Value",
							"value": {
								"value": "@split(pipeline().parameters.Filename,'_')[2]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable_runtokenvalue",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable_tokenID",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable_value",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable_TokenID1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Runtokenvalue",
							"value": {
								"value": "@concat(variables('TokenID1'),'_',variables('TokenID'),'_',variables('Value'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Switch_setvaTokenID",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Set variable_runtokenvalue",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@variables('TokenID')",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "ABC",
									"activities": [
										{
											"name": "Set variable_ABC",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Tokenpath",
												"value": {
													"value": "/struckzone/",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "DEF",
									"activities": [
										{
											"name": "Set variable_DEF",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Tokenpath",
												"value": {
													"value": "/struckzone/",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "GHI",
									"activities": [
										{
											"name": "Set variable_GHI",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Tokenpath",
												"value": {
													"value": "/struckzone/",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "XYZ",
									"activities": [
										{
											"name": "Set variable_XYZ",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Tokenpath",
												"value": {
													"value": "/struckzone/",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Set variable_TokenID1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenID1",
							"value": {
								"value": "@split(pipeline().parameters.Filename,'_')[0]",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Filename": {
						"type": "string"
					}
				},
				"variables": {
					"TokenID": {
						"type": "String"
					},
					"Value": {
						"type": "String"
					},
					"Runtokenvalue": {
						"type": "String"
					},
					"Tokenpath": {
						"type": "String"
					},
					"TokenID1": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ISE"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-12T11:05:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/setvariable_Swich_copydata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this is data copy from azureblodstoraage to azuredatalake storage",
				"activities": [
					{
						"name": "copy azureblob to ADLS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Filter_condition",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Azureblobstorage1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "azuredelpoy_adls1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "delete copydata",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "copy azureblob to ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Azureblobstorage1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlob_adf_development",
									"type": "LinkedServiceReference"
								},
								"path": "logzone"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Get Metadata_copydata",
						"description": "this getmetadata activity copy from blob to ADLS",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Switch_RuntoenvalueTokenID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Binary_getmetadata1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter_condition",
						"description": "this filter will copy data",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata_copydata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata_copydata').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(activity('Get Metadata_copydata').output.childItems[0].name,item().name)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute Pipeline_copydata",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "delete copydata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "copydata1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Set variable_tokenID",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenID",
							"value": {
								"value": "@split(pipeline().parameters.Filename,'_')[1]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable_value",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Value",
							"value": {
								"value": "@split(pipeline().parameters.Filename,'_')[2]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable_runtokenvalue",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable_tokenID",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable_value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Runtokenvalue",
							"value": {
								"value": "@concat(variables('TokenID'),'_',variables('Value'),'_Runreq.xls')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Switch_RuntoenvalueTokenID",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Set variable_runtokenvalue",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@variables('TokenID')",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "ABC",
									"activities": [
										{
											"name": "Set variable_ABC",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Tokenpath",
												"value": "/struckzone/"
											}
										}
									]
								},
								{
									"value": "DEF",
									"activities": [
										{
											"name": "Set variable_DEF",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Tokenpath",
												"value": "/struckzone/"
											}
										}
									]
								},
								{
									"value": "GHI",
									"activities": [
										{
											"name": "Set variable_GHI",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Tokenpath",
												"value": "/struckzone/"
											}
										}
									]
								},
								{
									"value": "XYZ",
									"activities": [
										{
											"name": "Set variable_XYZ",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Tokenpath",
												"value": "/struckzone/"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Filename": {
						"type": "string"
					}
				},
				"variables": {
					"TokenID": {
						"type": "String"
					},
					"Value": {
						"type": "String"
					},
					"Runtokenvalue": {
						"type": "String"
					},
					"Tokenpath": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ISE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Azureblobstorage1')]",
				"[concat(variables('factoryId'), '/datasets/azuredelpoy_adls1')]",
				"[concat(variables('factoryId'), '/datasets/Binary_getmetadata1')]",
				"[concat(variables('factoryId'), '/pipelines/copydata1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/setvariable_Swich_copydata1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this is data copy from azureblodstoraage to azuredatalake storage",
				"activities": [
					{
						"name": "copy azureblob to ADLS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Filter_condition",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Azureblobstorage4",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "azuredelpoy_adls4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "delete copydata",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "copy azureblob to ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Azureblobstorage4",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlob_adf_dev",
									"type": "LinkedServiceReference"
								},
								"path": "logzone"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Get Metadata_copydata",
						"description": "this getmetadata activity copy from blob to ADLS",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Switch_RuntoenvalueTokenID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Binary_getmetadata3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter_condition",
						"description": "this filter will copy data",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata_copydata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata_copydata').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(activity('Get Metadata_copydata').output.childItems[0].name,item().name)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute Pipeline_copydata",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "delete copydata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "copydata4",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Set variable_tokenID",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenID",
							"value": {
								"value": "@split(pipeline().parameters.Filename,'_')[1]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable_value",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Value",
							"value": {
								"value": "@split(pipeline().parameters.Filename,'_')[2]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable_runtokenvalue",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable_tokenID",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable_value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Runtokenvalue",
							"value": {
								"value": "@concat(variables('TokenID'),'_',variables('Value'),'_Runreq.xls')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Switch_RuntoenvalueTokenID",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Set variable_runtokenvalue",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@variables('TokenID')",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "ABC",
									"activities": [
										{
											"name": "Set variable_ABC",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Tokenpath",
												"value": "/struckzone/"
											}
										}
									]
								},
								{
									"value": "DEF",
									"activities": [
										{
											"name": "Set variable_DEF",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Tokenpath",
												"value": "/struckzone/"
											}
										}
									]
								},
								{
									"value": "GHI",
									"activities": [
										{
											"name": "Set variable_GHI",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Tokenpath",
												"value": "/struckzone/"
											}
										}
									]
								},
								{
									"value": "XYZ",
									"activities": [
										{
											"name": "Set variable_XYZ",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Tokenpath",
												"value": "/struckzone/"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Filename": {
						"type": "string"
					}
				},
				"variables": {
					"TokenID": {
						"type": "String"
					},
					"Value": {
						"type": "String"
					},
					"Runtokenvalue": {
						"type": "String"
					},
					"Tokenpath": {
						"type": "String"
					}
				},
				"folder": {
					"name": "EMR"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Azureblobstorage4')]",
				"[concat(variables('factoryId'), '/datasets/azuredelpoy_adls4')]",
				"[concat(variables('factoryId'), '/datasets/Binary_getmetadata3')]",
				"[concat(variables('factoryId'), '/pipelines/copydata4')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azureblobstorage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "rawzone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azureblobstorage1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "rawblob"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azureblobstorage2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_development",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename_ds": {
						"type": "string"
					},
					"Env_ds": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename_ds",
							"type": "Expression"
						},
						"container": "rawblob"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azureblobstorage3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "rawblob"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azureblobstorage4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "rawzone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the destination store.",
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_adfdevelopment",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "String"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@{dataset().Container}",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_adfdevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataDestinationStore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your data destination store.  ",
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_adfdevelopment",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_adfdevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataSourceStore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your data source store. ",
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_adfdevelopment",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_adfdevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataSource_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the file in the data source store.",
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_adfdevelopment",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "String"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"container": {
							"value": "@{dataset().Container}",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_adfdevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataSource_Folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "It describes the folder in the data source store.",
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_adfdevelopment",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@{dataset().Container}",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_adfdevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_Adls_forloop_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_adfdevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "struckzone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_adfdevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_Adls_forloop_ds1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "struckzone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_Adls_forloop_ds2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "struckzone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_Adls_forloop_ds3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "struckzone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_blob_foreach_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_adfdevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Dimensions_1.sql",
						"container": "rawblob"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_adfdevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_blob_foreach_ds1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Dimensions_1.sql",
						"container": "rawblob"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_blob_foreach_ds2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Dimensions_1.sql",
						"container": "rawblob"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_blob_foreach_ds3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Dimensions_1.sql",
						"container": "rawblob"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_blob_forloop')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_adfdevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Dimensions_1.sql",
						"container": "rawblob"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_adfdevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_blob_forloop1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Dimensions_1.sql",
						"container": "rawblob"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_blob_forloop2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Dimensions_1.sql",
						"container": "rawblob"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_blob_forloop3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Dimensions_1.sql",
						"container": "rawblob"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_getmetadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_adfdevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "rawblob"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_adfdevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_getmetadata1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "rawblob"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_getmetadata2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "rawblob"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_getmetadata3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "rawzone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_vl0')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_adfdevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "struckzone"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_adfdevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Destination_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "struckzone"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InvLocator_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "already.xls",
						"container": "rawblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "��\u0011ࡱ\u001a�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000>\u0000\u0003\u0000��\t\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000%\u0000\u0000\u0000\u0001\u0000\u0000\u0000����\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000����������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������)\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0005\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0007\u0000\u0000\u0000\b\u0000\u0000\u0000\t\u0000\u0000\u0000",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_vl0')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_adfdevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Mass_Additions_Post_300320.txt",
						"container": "rawblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "       Transaction Type:",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_adfdevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azureblobprepare')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_adfdevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "prepare"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_adfdevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azureblobprepare1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "prepare"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azureblobprepare2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "prepare"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azureblobprepare3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "prepare"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azureblobprepare4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "prepare"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azureblobprepare5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "preparezone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azuredelpoy_adls')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_adfdevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "struckzone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_adfdevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azuredelpoy_adls1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "struckzone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azuredelpoy_adls2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "struckzone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azuredelpoy_adls3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "struckzone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azuredelpoy_adls4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "struckzone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azureprepare_adls')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "struckzone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azureprepare_adls1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "preparezone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azureprepare_adls2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "preparezone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azureprepare_adls3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "preparezone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azureprepare_adls4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "preparezone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azureprepare_adls5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "datazone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customer_adls_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "datazone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/customer_blob_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Autoinvoice_Import_Program_061219.txt",
						"container": "preparezone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dalalake_locator_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "datazone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/delete_customer_blob_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Customer_DEF_Items.xls",
						"container": "preparezone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/deletelocator_blob_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "already.xls",
						"container": "rawzone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_combinelocaor')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "struckzone"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "1001",
						"type": "String"
					},
					{
						"name": "adi        ",
						"type": "String"
					},
					{
						"name": "AP",
						"type": "String"
					},
					{
						"name": "9742989539",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_empdatafile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Employee.txt",
						"container": "rawblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_empfixedlength')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Employee.txt",
						"container": "rawblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_empoutputdata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "struckzone"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_innlocaornew')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "data.view",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "already1.xls",
						"container": "rawblob"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ORGANIZATION_ID",
						"type": "String"
					},
					{
						"name": "Location1",
						"type": "String"
					},
					{
						"name": "Location2",
						"type": "String"
					},
					{
						"name": "Location3",
						"type": "String"
					},
					{
						"name": "Location4",
						"type": "String"
					},
					{
						"name": "Location Type",
						"type": "String"
					},
					{
						"name": "PICKING_ORDER",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_invlocaor')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "data.view",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "already.xls",
						"container": "rawblob"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ORGANIZATION_ID",
						"type": "String"
					},
					{
						"name": "Location1",
						"type": "String"
					},
					{
						"name": "Location2",
						"type": "String"
					},
					{
						"name": "Location3",
						"type": "String"
					},
					{
						"name": "Location4",
						"type": "String"
					},
					{
						"name": "Location Type",
						"type": "String"
					},
					{
						"name": "PICKING_ORDER",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_locator')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "already.xls",
						"container": "rawblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_porunningouput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "struckzone"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_porunningtotal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Employee.txt",
						"container": "rawblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/jobparam_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_adfdevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "jobparam.txt",
						"container": "transiant"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ENV",
						"type": "String"
					},
					{
						"name": "Blob_path",
						"type": "String"
					},
					{
						"name": "ADLS_Path",
						"type": "String"
					},
					{
						"name": "Token_Id",
						"type": "String"
					},
					{
						"name": "Param_Path",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_adfdevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/locator_blob_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Full_Load_Displacement_Information_1.sql",
						"container": "preparezone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/metadata_blob_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "rawzone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Customer_ABC_Items.csv",
						"container": "rawzone"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage_adfdevelopment')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_adfdevelopment_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlob_adf_dev')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlob_adf_dev_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlob_adf_development')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlob_adf_development_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage_adfdevelopment')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_adfdevelopment_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage_adfdevelopment_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLake_adf_dev')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLake_adf_dev_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLake_adf_dev_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLake_adf_development')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLake_adf_development_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLake_adf_development_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/schedule_triggers')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this triggers will run schedule based",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "customercopy",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 5,
						"startTime": "2022-08-10T18:58:00",
						"endTime": "2022-08-10T19:11:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/customercopy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_porunningtotal",
								"type": "DatasetReference"
							},
							"name": "PoRunningTotal"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_porunningouput",
								"type": "DatasetReference"
							},
							"name": "ouputsink",
							"rejectedDataLinkedService": {
								"referenceName": "AzureDataLake_adf_development",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "select1"
						},
						{
							"name": "window1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Column_1 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> PoRunningTotal",
						"PoRunningTotal derive(EmpId = substring(Column_1,1,4),",
						"          Ename = substring(Column_1,5,11),",
						"          state = substring(Column_1,16,2),",
						"          phone = substring(Column_1,18,10),",
						"          total = substring(Column_1,28,3)) ~> derivedColumn1",
						"derivedColumn1 select(mapColumn(",
						"          EmpId,",
						"          Ename,",
						"          state,",
						"          phone,",
						"          total",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 window(asc(total, true),",
						"     runningtotal = sum(toInteger(total))) ~> window1",
						"window1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Column_1 as string,",
						"          Column_2 as string,",
						"          Column_3 as string,",
						"          Column_4 as string",
						"     ),",
						"     partitionFileNames:['EmployeezRunningtotal.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> ouputsink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_porunningtotal')]",
				"[concat(variables('factoryId'), '/datasets/ds_porunningouput')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/duplicaterows')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_invlocaor",
								"type": "DatasetReference"
							},
							"name": "Invlocator"
						},
						{
							"dataset": {
								"referenceName": "ds_innlocaornew",
								"type": "DatasetReference"
							},
							"name": "invlocaornew"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_combinelocaor",
								"type": "DatasetReference"
							},
							"name": "invlocatondata"
						}
					],
					"transformations": [
						{
							"name": "combination"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "sort1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ORGANIZATION_ID as string,",
						"          Location1 as string,",
						"          Location2 as string,",
						"          Location3 as string,",
						"          Location4 as string,",
						"          {Location Type} as string,",
						"          PICKING_ORDER as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Invlocator",
						"source(output(",
						"          ORGANIZATION_ID as string,",
						"          Location1 as string,",
						"          Location2 as string,",
						"          Location3 as string,",
						"          Location4 as string,",
						"          {Location Type} as string,",
						"          PICKING_ORDER as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> invlocaornew",
						"Invlocator, invlocaornew union(byName: true)~> combination",
						"combination aggregate(groupBy(PICKING_ORDER),",
						"     each(match(name!='PICKING_ORDER'), $$ = first($$))) ~> aggregate1",
						"aggregate1 sort(asc(PICKING_ORDER, true)) ~> sort1",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {1001} as string,",
						"          {adi        } as string,",
						"          AP as string,",
						"          {9742989539} as string",
						"     ),",
						"     partitionFileNames:['inv_locaor.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> invlocatondata"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_invlocaor')]",
				"[concat(variables('factoryId'), '/datasets/ds_innlocaornew')]",
				"[concat(variables('factoryId'), '/datasets/ds_combinelocaor')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/empdatafile')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_empdatafile",
								"type": "DatasetReference"
							},
							"name": "empdatavaliddation"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_empoutputdata",
								"type": "DatasetReference"
							},
							"name": "employeeoutput",
							"rejectedDataLinkedService": {
								"referenceName": "AzureDataLake_adf_development",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "derivedColumn"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Column_1 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> empdatavaliddation",
						"empdatavaliddation derive(EmpId = substring(Column_1,1,4),",
						"          Ename = substring(Column_1,5,11),",
						"          state = substring(Column_1,16,2),",
						"          phone = substring(Column_1,18,10)) ~> derivedColumn",
						"derivedColumn select(mapColumn(",
						"          EmpId,",
						"          Ename,",
						"          state,",
						"          phone",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['Employee_data.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> employeeoutput"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_empdatafile')]",
				"[concat(variables('factoryId'), '/datasets/ds_empoutputdata')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stogage_blobtoadls_triggers')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this triggers  data files move  azure blob storage to azure Adls storage",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "setvariable_Swich_copydata1",
							"type": "PipelineReference"
						},
						"parameters": {
							"Filename": "[parameters('stogage_blobtoadls_triggers_properties_setvariable_Swich_copydata1_parameters_Filename')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/rawzone/blobs/Full_",
					"blobPathEndsWith": ".sql",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('stogage_blobtoadls_triggers_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/setvariable_Swich_copydata1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/storage_triggers')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/rawzone/blobs/Full_",
					"blobPathEndsWith": ".sql",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('storage_triggers_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_blob_metafata_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_adf_dev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "rawzone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_adf_dev')]"
			]
		}
	]
}