{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "azureadffactorydev"
		},
		"azuredatacopy_adls_triggers_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/007dcd1d-92b6-47f6-a5f4-a566d7fdef64/resourceGroups/azuredevelopment-rg/providers/Microsoft.Storage/storageAccounts/azureblobstoragee"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/setvariable_Swich_copydata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this is data copy from azureblodstoraage to azuredatalake storage",
				"activities": [
					{
						"name": "copy azureblob to ADLS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Filter_condition",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Azureblobstorage1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "azuredelpoy_adls1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "delete copydata",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "copy azureblob to ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Azureblobstorage1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlob_adf_development",
									"type": "LinkedServiceReference"
								},
								"path": "logzone"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Get Metadata_copydata",
						"description": "this getmetadata activity copy from blob to ADLS",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Switch_RuntoenvalueTokenID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Binary_getmetadata1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter_condition",
						"description": "this filter will copy data",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata_copydata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata_copydata').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(activity('Get Metadata_copydata').output.childItems[0].name,item().name)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute Pipeline_copydata",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "delete copydata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "copydata1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Set variable_tokenID",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenID",
							"value": {
								"value": "@split(pipeline().parameters.Filename,'_')[1]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable_value",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Value",
							"value": {
								"value": "@split(pipeline().parameters.Filename,'_')[2]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable_runtokenvalue",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable_tokenID",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable_value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Runtokenvalue",
							"value": {
								"value": "@concat(variables('TokenID'),'_',variables('Value'),'_Runreq.xls')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Switch_RuntoenvalueTokenID",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Set variable_runtokenvalue",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@variables('TokenID')",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "ABC",
									"activities": [
										{
											"name": "Set variable_ABC",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Tokenpath",
												"value": "/struckzone/"
											}
										}
									]
								},
								{
									"value": "DEF",
									"activities": [
										{
											"name": "Set variable_DEF",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Tokenpath",
												"value": "/struckzone/"
											}
										}
									]
								},
								{
									"value": "GHI",
									"activities": [
										{
											"name": "Set variable_GHI",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Tokenpath",
												"value": "/struckzone/"
											}
										}
									]
								},
								{
									"value": "XYZ",
									"activities": [
										{
											"name": "Set variable_XYZ",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Tokenpath",
												"value": "/struckzone/"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Filename": {
						"type": "string"
					}
				},
				"variables": {
					"TokenID": {
						"type": "String"
					},
					"Value": {
						"type": "String"
					},
					"Runtokenvalue": {
						"type": "String"
					},
					"Tokenpath": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ISE"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/azuredatacopy_adls_triggers')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this triggers will run based on event created",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyPipeline_onetimecopy",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/rawblob/blobs/Autoinvoice_",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('azuredatacopy_adls_triggers_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		}
	]
}