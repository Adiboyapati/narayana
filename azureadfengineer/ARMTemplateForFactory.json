{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "azureadfengineer"
		},
		"AzureBlobStorage_adfdevlopment_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage_adfdevlopment'"
		},
		"AzureDataLakeStorage_adf_development_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage_adf_development'"
		},
		"AzureDataLakeStorage_adf_development_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azureadfadls.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Azadf_copydata_df')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline is used to copy data rawzone to strucked zone",
				"activities": [
					{
						"name": "Rawzone to struct to copy data",
						"description": "this data copy from rawzone to struct zone",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Filter_condition",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorage_adfdevlopment",
										"type": "LinkedServiceReference"
									},
									"path": "ingesterror"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Adfdeploy_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "adfdeploy_adls_binary",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete rawzone data",
						"description": "this activity delete rawzone datafiles",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Rawzone to struct to copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Adfdeploy_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage_adfdevlopment",
									"type": "LinkedServiceReference"
								},
								"path": "logzone"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Get Metadata_blob",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Binary_getmetadata",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter_condition",
						"description": "filter the list of conditions",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata_blob').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(activity('Get Metadata_blob').output.childItems[0].name,item().name)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute Pipeline_cpoydata",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete rawzone data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyPipeline_onetinecopy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "AzureADF"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Adfdeploy_ds')]",
				"[concat(variables('factoryId'), '/datasets/adfdeploy_adls_binary')]",
				"[concat(variables('factoryId'), '/datasets/Binary_getmetadata')]",
				"[concat(variables('factoryId'), '/pipelines/CopyPipeline_onetinecopy')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_adfdevlopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_onetinecopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_dgb",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"maxConcurrentConnections": 10,
									"recursive": true,
									"modifiedDatetimeEnd": "2022-06-13T00:00:00.737Z",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 10
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"validateDataConsistency": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorage_adfdevlopment",
										"type": "LinkedServiceReference"
									},
									"path": "logzone"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_dgb",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_dgb",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "AzureADF"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_dgb')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_dgb')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_adfdevlopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Adfdeploy_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_adfdevlopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "rawzone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_adfdevlopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_getmetadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_adfdevlopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "rawzone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_adfdevlopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_dgb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "structzone"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_dgb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_adfdevlopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "rawzone"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_adfdevlopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfdeploy_adls_binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_adf_development",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "structzone"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage_adf_development')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage_adfdevlopment')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_adfdevlopment_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage_adf_development')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_adf_development_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage_adf_development_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azadf_copydata_df_copy_setvaribles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline is used to copy data rawzone to strucked zone",
				"activities": [
					{
						"name": "Rawzone to struct to copy data",
						"description": "this data copy from rawzone to struct zone",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Filter_condition",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorage_adfdevlopment",
										"type": "LinkedServiceReference"
									},
									"path": "ingesterror"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Adfdeploy_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "adfdeploy_adls_binary",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete rawzone data",
						"description": "this activity delete rawzone datafiles",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Rawzone to struct to copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Adfdeploy_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage_adfdevlopment",
									"type": "LinkedServiceReference"
								},
								"path": "logzone"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Get Metadata_blob",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Switch_Runtoenvalue Token ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Binary_getmetadata",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter_condition",
						"description": "filter the list of conditions",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata_blob').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(activity('Get Metadata_blob').output.childItems[0].name,item().name)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute Pipeline_cpoydata",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delete rawzone data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyPipeline_onetinecopy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Set variable_TokenID",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "TokenID",
							"value": {
								"value": "@split(pipeline().parameters.Filename,'_')[1]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable Value",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Value",
							"value": {
								"value": "@split(pipeline().parameters.Filename,'_')[2]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variableRuntokenvalue",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable_TokenID",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Runtokenvalue",
							"value": {
								"value": "@concat(variables('TokenID'),'_',variables('Value'),'_Runreq.txt')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Switch_Runtoenvalue Token ID",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Set variableRuntokenvalue",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@variables('TokenID')",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Clean",
									"activities": [
										{
											"name": "Set variable Clean",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Tokenpath",
												"value": "/structzone/"
											}
										}
									]
								},
								{
									"value": "Export",
									"activities": [
										{
											"name": "Set variable Export",
											"description": "",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Tokenpath",
												"value": "/structzone/"
											}
										}
									]
								},
								{
									"value": "Import",
									"activities": [
										{
											"name": "Set variable Import",
											"type": "SetVariable",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"variableName": "Tokenpath",
												"value": "/structzone/"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Filename": {
						"type": "string"
					}
				},
				"variables": {
					"TokenID": {
						"type": "String"
					},
					"Value": {
						"type": "String"
					},
					"Runtokenvalue": {
						"type": "String"
					},
					"Tokenpath": {
						"type": "String"
					}
				},
				"folder": {
					"name": "AzureADF"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Adfdeploy_ds')]",
				"[concat(variables('factoryId'), '/datasets/adfdeploy_adls_binary')]",
				"[concat(variables('factoryId'), '/datasets/Binary_getmetadata')]",
				"[concat(variables('factoryId'), '/pipelines/CopyPipeline_onetinecopy')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_adfdevlopment')]"
			]
		}
	]
}